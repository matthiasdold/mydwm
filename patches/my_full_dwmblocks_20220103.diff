diff --git a/blocks.def/battery b/blocks.def/battery
new file mode 100755
index 0000000..f74115a
--- /dev/null
+++ b/blocks.def/battery
@@ -0,0 +1,42 @@
+#!/bin/sh
+
+# Prints all batteries, their percentage remaining and an emoji corresponding
+# to charge status (üîå for plugged up, üîã for discharging on battery, etc.).
+
+case $BLOCK_BUTTON in
+	3) notify-send "üîã Battery module" "üîã: discharging
+üõë: not charging
+‚ôª: stagnant charge
+ÔñÉ : charging
+‚ö°: charged
+‚ùó: battery very low!
+- Scroll to change adjust xbacklight." ;;
+	4) xbacklight -inc 10 ;;
+	5) xbacklight -dec 10 ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+# Loop through all attached batteries and format the info
+for battery in /sys/class/power_supply/BAT?*; do
+	# If non-first battery, print a space separator.
+	[ -n "${capacity+x}" ] && printf " "
+	# Sets up the status and capacity
+	case "$(cat "$battery/status" 2>&1)" in
+		"Full") status="‚ö°" ;;
+		"Discharging") status="Ôñã" ;;
+		"Charging") status="ÔñÉ" ;;
+		"Not charging") status="Ôïæ" ;;
+		"Unknown") status="‚ôªÔ∏è" ;;
+		*) exit 1 ;;
+	esac
+	capacity="$(cat "$battery/capacity" 2>&1)"
+	# Will make a warn variable if discharging and low
+	[ "$status" = "Ôñã" ] && [ "$capacity" -le 25 ] && warn="‚ùó"
+	# Prints the info
+	if [ "$capacity" -le 25 ] 
+	then
+	    printf "\x0d%s%s%d%%\x0b" "$status" "$warn" "$capacity"; unset warn
+	else
+	    printf "%s%s%d%%" "$status" "$warn" "$capacity"; unset warn
+	fi
+done && printf "\\n"
diff --git a/blocks.def/battery.sh b/blocks.def/battery.sh
deleted file mode 100755
index df98fc8..0000000
--- a/blocks.def/battery.sh
+++ /dev/null
@@ -1,4 +0,0 @@
-#!/bin/sh
-ICON="Óà∑"
-read -r capacity </sys/class/power_supply/BAT0/capacity
-printf "$ICON%s%%" "$capacity"
diff --git a/blocks.def/battery_button.sh b/blocks.def/battery_button.sh
deleted file mode 100755
index b6b51ad..0000000
--- a/blocks.def/battery_button.sh
+++ /dev/null
@@ -1,41 +0,0 @@
-#!/bin/sh
-
-read -r rate </sys/class/power_supply/BAT0/current_now
-[ "$rate" = 0 ] && notify-send "Battery fully charged" && exit
-
-read -r ac </sys/class/power_supply/AC/online
-read -r charge_now </sys/class/power_supply/BAT0/charge_now
-
-if [ "$ac" = 1 ] ; then
-    read -r charge_full </sys/class/power_supply/BAT0/charge_full
-    val="$(( charge_full-charge_now ))"
-else
-    val="$charge_now"
-fi
-
-hr="$(( val / rate ))"
-mn="$(( (val * 60) / rate - hr * 60 ))"
-
-case "$hr" in
-    0)
-        case "$mn" in
-            0) notify-send "Battery fully charged" ;;
-            1) notify-send "1 minute remaining" ;;
-            *) notify-send "$mn minutes remaining" ;;
-        esac
-        ;;
-    1)
-        case "$mn" in
-            0) notify-send "1 hour remaining" ;;
-            1) notify-send "1 hour, 1 minute remaining" ;;
-            *) notify-send "1 hour, $mn minutes remaining" ;;
-        esac
-        ;;
-    *)
-        case "$mn" in
-            0) notify-send "$hr hours remaining" ;;
-            1) notify-send "$hr hours, 1 minute remaining" ;;
-            *) notify-send "$hr hours, $mn minutes remaining" ;;
-        esac
-        ;;
-esac
diff --git a/blocks.def/calendar.sh b/blocks.def/calendar.sh
deleted file mode 100755
index 72a0a5b..0000000
--- a/blocks.def/calendar.sh
+++ /dev/null
@@ -1,3 +0,0 @@
-#!/bin/sh
-ICON="Óà•"
-printf "$ICON%s" "$(date '+%a, %b %d, %R')"
diff --git a/blocks.def/clock b/blocks.def/clock
new file mode 100755
index 0000000..2595f0f
--- /dev/null
+++ b/blocks.def/clock
@@ -0,0 +1,14 @@
+#!/bin/sh
+
+clock=$(date '+%I')
+
+
+case $BLOCK_BUTTON in
+	1) notify-send "This Month" "$(cal --color=always | sed "s/..7m/<b><span color=\"red\">/;s/..27m/<\/span><\/b>/")" && notify-send "Appointments" "$(calcurse -d3)" ;;
+	2) setsid -f "$TERMINAL" -e calcurse ;;
+	3) notify-send "üìÖ Time/date module" "\- Left click to show upcoming appointments for the next three days via \`calcurse -d3\` and show the month via \`cal\`
+- Middle click opens calcurse if installed" ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+date "+%Y-%m-%d %H:%M"
diff --git a/blocks.def/cpu b/blocks.def/cpu
new file mode 100755
index 0000000..fb8d683
--- /dev/null
+++ b/blocks.def/cpu
@@ -0,0 +1,31 @@
+#!/bin/sh
+#
+# Color code with \x0b, \x0c, \x0d, ... etc being the indeces of the colors
+# array from within the config.h of dwm
+# static const char *colors[][3]      = {
+# 	/*               fg         bg         border   */
+# 	[SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeCol1] = { warnfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeCol2] = { critfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeSel]  = { selfgcolor,  selbgcolor,  selbordercolor  },
+# };
+
+case $BLOCK_BUTTON in
+	1) notify-send "üñ• CPU hogs" "$(ps axch -o cmd:15,%cpu --sort=-%cpu | head)\\n(100% per core)" ;;
+	2) setsid -f "$TERMINAL" -e htop ;;
+	3) notify-send "üñ• CPU module " "\- Shows CPU temperature.
+- Click to show intensive processes.
+- Middle click to open htop." ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+temp=`sensors | awk '/Core 0/ {print "Óàã" $3}'`
+tempval=`printf $temp | sed -rn 's/.*\+([0-9]*).*/\1/p'`
+case 1 in                                   # take the first statement which is true
+    # $((tempval<=70))) printf "$temp \n" ;;
+    # $((tempval<=80))) printf "`tput setaf 3` $temp \n" ;; 
+    # $((tempval<=200))) printf "`tput setaf 1` $temp \n" ;;
+     $((tempval<=85))) printf "\x0b$temp\n" ;;
+     $((tempval<=95))) printf "\x0c$temp\n" ;; 
+     $((tempval<=200))) printf "\x0d$temp\n" ;;
+esac
diff --git a/blocks.def/cpu_temp.sh b/blocks.def/cpu_temp.sh
deleted file mode 100755
index 8159ea1..0000000
--- a/blocks.def/cpu_temp.sh
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/bin/sh
-
-ICONn="ÓÄ¶" # icon for normal temperatures
-ICONc="ÓÄ¶" # icon for critical temperatures
-
-crit=70 # critical temperature
-
-read -r temp </sys/class/thermal/thermal_zone0/temp
-temp="${temp%???}"
-
-if [ "$temp" -lt "$crit" ] ; then
-    printf "$ICONn%s¬∞C" "$temp"
-else
-    printf "$ICONc%s¬∞C" "$temp"
-fi
diff --git a/blocks.def/cpu_temp_button.sh b/blocks.def/cpu_temp_button.sh
deleted file mode 100755
index 29624c7..0000000
--- a/blocks.def/cpu_temp_button.sh
+++ /dev/null
@@ -1,6 +0,0 @@
-#!/bin/sh
-case "$1" in
-    1) exec "$TERMINAL" -e htop -s PERCENT_CPU ;;
-    2) exec "$TERMINAL" -e htop ;;
-    3) exec "$TERMINAL" -e htop -s PERCENT_MEM ;;
-esac
diff --git a/blocks.def/cpubars b/blocks.def/cpubars
new file mode 100755
index 0000000..ad23509
--- /dev/null
+++ b/blocks.def/cpubars
@@ -0,0 +1,63 @@
+#!/bin/sh
+
+# Module showing CPU load as a changing bars.
+# Just like in polybar.
+# Each bar represents amount of load on one core since
+# last run.
+#
+# Color code with \x0b, \x0c, \x0d, ... etc being the indeces of the colors
+# array from within the config.h of dwm
+# static const char *colors[][3]      = {
+# 	/*               fg         bg         border   */
+# 	[SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeCol1] = { warnfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeCol2] = { critfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeSel]  = { selfgcolor,  selbgcolor,  selbordercolor  },
+# };
+
+# Cache in tmpfs to improve speed and reduce SSD load
+cache=/tmp/cpubarscache
+
+case $BLOCK_BUTTON in
+	2) setsid -f "$TERMINAL" -e htop ;;
+	3) notify-send "ü™® CPU load module" "Each bar represents
+one CPU core";;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+# id total idle
+stats=$(awk '/cpu[0-9]+/ {printf "%d %d %d\n", substr($1,4), ($2 + $3 + $4 + $5), $5 }' /proc/stat)
+[ ! -f $cache ] && echo "$stats" > "$cache"
+old=$(cat "$cache")
+printf "Ôãõ"
+echo "$stats" | while read -r row; do
+	id=${row%% *}
+	rest=${row#* }
+	total=${rest%% *}
+	idle=${rest##* }
+
+	case "$(echo "$old" | awk '{if ($1 == id)
+		printf "%d\n", (1 - (idle - $3)  / (total - $2))*100 /12.5}' \
+		id="$id" total="$total" idle="$idle")" in
+        "0") printf "‚ñÅ";;
+		"1") printf "\x0b‚ñÇ\x0b";;
+		"2") printf "\x0b‚ñÉ\x0b";;
+		"3") printf "\x0b‚ñÑ\x0b";;
+		"4") printf "\x0b‚ñÖ\x0b";;
+		"5") printf "\x0c‚ñÜ\x0b";;
+		"6") printf "\x0c‚ñá\x0b";;
+		"7") printf "\x0d‚ñà\x0b";;
+		"8") printf "\x0d‚ñà\x0b";;
+
+		#"0") printf "`tput setaf 2` ‚ñÅ";;
+		#"1") printf "`tput setaf 2` ‚ñÇ";;
+		#"2") printf "`tput setaf 2` ‚ñÉ";;
+		#"3") printf "`tput setaf 3` ‚ñÑ";;
+		#"4") printf "`tput setaf 3` ‚ñÖ";;
+		#"5") printf "`tput setaf 3` ‚ñÜ";;
+		#"6") printf "`tput setaf 1` ‚ñá";;
+		#"7") printf "`tput setaf 1` ‚ñà";;
+		#"8") printf "`tput setaf 1` ‚ñà";;
+	esac
+done; printf "\\n"
+echo "$stats" > "$cache"
diff --git a/blocks.def/internet b/blocks.def/internet
new file mode 100755
index 0000000..26241ae
--- /dev/null
+++ b/blocks.def/internet
@@ -0,0 +1,23 @@
+#!/bin/sh
+
+# Show wifi üì∂ and percent strength or üì° if none.
+# Show üåê if connected to ethernet or ‚ùé if none.
+
+case $BLOCK_BUTTON in
+	1) "$TERMINAL" -e nmtui; pkill -RTMIN+4 dwmblocks ;;
+	3) notify-send "üåê Internet module" "\- Click to connect
+üì°: no wifi connection
+üì∂: wifi connection with quality
+‚ùé: no ethernet
+üåê: ethernet working
+" ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+case "$(cat /sys/class/net/w*/operstate 2>/dev/null)" in
+	down) wifiicon="" ;;
+	up) wifiicon="$(awk '/^\s*w/ { print " Óòô" int($3 * 100 / 70) "% " }' /proc/net/wireless)" ;;
+esac
+
+# added ip extraction
+printf "%s%s\n" "$wifiicon" "$(sed "s/down//;s/up/üåê/" /sys/class/net/e*/operstate 2>/dev/null)" # "$(ip route show | grep -oE 'src .+ metric' | awk '{ print $2}')"
diff --git a/blocks.def/kernel_v b/blocks.def/kernel_v
new file mode 100755
index 0000000..2983370
--- /dev/null
+++ b/blocks.def/kernel_v
@@ -0,0 +1,2 @@
+#!/bin/bash
+uname -r | awk -F "-" '{print "ÔåÉ"$1}'
diff --git a/blocks.def/memory b/blocks.def/memory
new file mode 100755
index 0000000..8109919
--- /dev/null
+++ b/blocks.def/memory
@@ -0,0 +1,20 @@
+#!/bin/sh
+
+case $BLOCK_BUTTON in
+	1) notify-send "üß† Memory hogs" "$(ps axch -o cmd:15,%mem --sort=-%mem | head)" ;;
+	2) setsid -f "$TERMINAL" -e htop ;;
+	3) notify-send "üß† Memory module" "\- Shows Memory Used/Total.
+- Click to show memory hogs.
+- Middle click to open htop." ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+memstr=`free --mebi | sed -n '2{p;q}' | awk  '{printf "%2.1fGiB/%2.1fGiB\n", ($3 / 1024), ($2 / 1024)}'`
+# sed for cast to numeric
+memval=`free --mebi | sed -n '2{p;q}' | awk '{print ("%2.1f\n", $3 / $2 * 100)}' | sed -rn 's/.*\+([0-9]*).*/\1/p'`
+
+case 1 in                                   # take the first statement which is true
+     $((memval<=70))) printf "\x0bÔö∑$memstr\n" ;;
+     $((memval<=80))) printf "\x0cÔö∑\x0b$memstr\n\x0b" ;;
+     $((memval<=90))) printf "\x0dÔö∑\x0b$memstr\n\x0b" ;;
+esac
diff --git a/blocks.def/nettraf b/blocks.def/nettraf
new file mode 100755
index 0000000..4d70b9a
--- /dev/null
+++ b/blocks.def/nettraf
@@ -0,0 +1,42 @@
+#!/bin/sh
+
+# Module showing network traffic. Shows how much data has been received (RX) or
+# transmitted (TX) since the previous time this script ran. So if run every
+# second, gives network traffic per second.
+#
+# Color code with \x0b, \x0c, \x0d, ... etc being the indeces of the colors
+# array from within the config.h of dwm
+# static const char *colors[][3]      = {
+# 	/*               fg         bg         border   */
+# 	[SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeCol1] = { warnfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeCol2] = { critfgcolor, normbgcolor, normbordercolor },
+# 	[SchemeCol3] = { selbordercolor, normbgcolor, normbordercolor },
+# 	[SchemeSel]  = { selfgcolor,  selbgcolor,  selbordercolor  },
+# };
+
+
+
+case $BLOCK_BUTTON in
+	1) setsid -f "$TERMINAL" -e bmon ;;
+	3) notify-send "üåê Network traffic module" "üîª: Traffic received
+üî∫: Traffic transmitted" ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+update() {
+    sum=0
+    for arg; do
+        read -r i < "$arg"
+        sum=$(( sum + i ))
+    done
+    cache=${XDG_CACHE_HOME:-$HOME/.cache}/${1##*/}
+    [ -f "$cache" ] && read -r old < "$cache" || old=0
+    printf %d\\n "$sum" > "$cache"
+    printf %d\\n $(( sum - old ))
+}
+
+rx=$(update /sys/class/net/[ew]*/statistics/rx_bytes)
+tx=$(update /sys/class/net/[ew]*/statistics/tx_bytes)
+
+printf "ÔÆæ%4sB ÔØÅ%4sB\\n" $(numfmt --to=iec $rx) $(numfmt --to=iec $tx)
diff --git a/blocks.def/pacpackages b/blocks.def/pacpackages
new file mode 100755
index 0000000..cbf34dd
--- /dev/null
+++ b/blocks.def/pacpackages
@@ -0,0 +1,31 @@
+#!/bin/sh
+
+# Displays number of upgradeable packages.
+# For this to work, have a `pacman -Sy` command run in the background as a
+# cronjob every so often as root. This script will then read those packages.
+# When clicked, it will run an upgrade via pacman.
+#
+# Add the following text as a file in /usr/share/libalpm/hooks/statusbar.hook:
+#
+# [Trigger]
+# Operation = Upgrade
+# Type = Package
+# Target = *
+#
+# [Action]
+# Description = Updating statusbar...
+# When = PostTransaction
+# Exec = /usr/bin/pkill -RTMIN+8 dwmblocks # Or i3blocks if using i3.
+
+# TODO --> Add the cron job
+
+case $BLOCK_BUTTON in
+	1) setsid -f "$TERMINAL" -e popupgrade ;;
+	2) notify-send "$(/usr/bin/pacman -Qu)" ;;
+	3) notify-send "üéÅ Upgrade module" "Ôö•: number of upgradable packages
+- Left click to upgrade packages
+- Middle click to show upgradable packages" ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+pacman -Qu | grep -Fcv "[ignored]" | sed "s/^/Ôö¶/;s/^Ôö•0$//g"
diff --git a/blocks.def/pacpackages.service b/blocks.def/pacpackages.service
new file mode 100644
index 0000000..b701f8e
--- /dev/null
+++ b/blocks.def/pacpackages.service
@@ -0,0 +1,6 @@
+[Unit]
+Description=Updating the pacman index
+
+[Service]
+Type=simple
+ExecStart=pacman -Sy
diff --git a/blocks.def/pacpackages.timer b/blocks.def/pacpackages.timer
new file mode 100644
index 0000000..4b92892
--- /dev/null
+++ b/blocks.def/pacpackages.timer
@@ -0,0 +1,9 @@
+[Unit]
+Description=Update the pacman index every 15 min after boot and every day if continuously running
+
+[Timer]
+OnBootSec=15min
+OnUnitActiveSec=1d
+
+[Install]
+WantedBy=timers.target
diff --git a/blocks.def/volume b/blocks.def/volume
new file mode 100755
index 0000000..9dcabe0
--- /dev/null
+++ b/blocks.def/volume
@@ -0,0 +1,28 @@
+#!/bin/sh
+
+# Prints the current volume or üîá if muted.
+
+case $BLOCK_BUTTON in
+	1) setsid -f "$TERMINAL" -e pulsemixer ;;
+	2) pamixer -t ;;
+	4) pamixer --allow-boost -i 1 ;;
+	5) pamixer --allow-boost -d 1 ;;
+	3) notify-send "üì¢ Volume module" "\- Shows volume üîä, üîá if muted.
+- Middle click to mute.
+- Scroll to change." ;;
+	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
+esac
+
+[ $(pamixer --get-mute) = true ] && echo "Ôë¶" && exit
+
+vol="$(pamixer --get-volume)"
+
+if [ "$vol" -gt "70" ]; then
+	icon="ÔÄ®"
+elif [ "$vol" -lt "30" ]; then
+	icon="ÔÄ®"
+else
+	icon="ÔÄ®"
+fi
+
+echo "$icon$vol%"
diff --git a/blocks.def/volume.pipewire.sh b/blocks.def/volume.pipewire.sh
deleted file mode 100755
index b4e6c8f..0000000
--- a/blocks.def/volume.pipewire.sh
+++ /dev/null
@@ -1,44 +0,0 @@
-#!/bin/sh
-# (for pipewire users)
-# This script parses the output of `pactl list sinks' to find volume and mute
-# status of the default audio sink and whether headphones are plugged in or not
-# Also see ../daemons/pulse_daemon.sh
-sink="$(pactl info | awk '$1 == "Default" && $2 == "Sink:" {print $3}')"
-[ -n "$sink" ] || exit
-pactl list sinks | awk -v sink="$sink" '
-    BEGIN {
-        ICONsn = "\x0cÓÅê\x0b" # headphone unplugged, not muted
-        ICONsm = "\x0dÓÅê\x0b" # headphone unplugged, muted
-        ICONhn = "\x0cÓÅç\x0b" # headphone plugged in, not muted
-        ICONhm = "\x0dÓÅç\x0b" # headphone plugged in, muted
-    }
-    f {
-        if ($1 == "Mute:" && $2 == "yes") {
-            m = 1
-        } else if ($1 == "Volume:") {
-            if ($3 == $10) {
-                vb = $5
-            } else {
-                vl = $5
-                vr = $12
-            }
-        } else if ($1 == "Active" && $2 == "Port:") {
-            if (tolower($3) ~ /headphone/)
-                h = 1
-            exit
-        }
-        next
-    }
-    $1 == "Name:" && $2 == sink {
-        f = 1
-    }
-    END {
-        if (f) {
-            printf "%s", h ? (m ? ICONhm : ICONhn) : (m ? ICONsm : ICONsn)
-            if (vb)
-                print vb
-            else
-                printf "L%s R%s\n", vl, vr
-        }
-    }
-'
diff --git a/blocks.def/volume.sh b/blocks.def/volume.sh
deleted file mode 100755
index b74139d..0000000
--- a/blocks.def/volume.sh
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/bin/sh
-# (for pulseaudio users)
-# This script parses the output of `pacmd list-sinks' to find volume and mute
-# status of the default audio sink and whether headphones are plugged in or not
-# Also see ../daemons/pulse_daemon.sh
-pacmd list-sinks | awk '
-    BEGIN {
-        ICONsn = "\x0cÓÅê\x0b" # headphone unplugged, not muted
-        ICONsm = "\x0dÓÅê\x0b" # headphone unplugged, muted
-        ICONhn = "\x0cÓÅç\x0b" # headphone plugged in, not muted
-        ICONhm = "\x0dÓÅç\x0b" # headphone plugged in, muted
-    }
-    f {
-        if ($1 == "muted:" && $2 == "yes") {
-            m = 1
-        } else if ($1 == "volume:") {
-            if ($3 == $10) {
-                vb = $5
-            } else {
-                vl = $5
-                vr = $12
-            }
-        } else if ($1 == "active" && $2 == "port:") {
-            if (tolower($3) ~ /headphone/)
-                h = 1
-            exit
-        }
-        next
-    }
-    $1 == "*" && $2 == "index:" {
-        f = 1
-    }
-    END {
-        if (f) {
-            printf "%s", h ? (m ? ICONhm : ICONhn) : (m ? ICONsm : ICONsn)
-            if (vb)
-                print vb
-            else
-                printf "L%s R%s\n", vl, vr
-        }
-    }
-'
diff --git a/blocks.def/volume_button.sh b/blocks.def/volume_button.sh
deleted file mode 100755
index b0f58d4..0000000
--- a/blocks.def/volume_button.sh
+++ /dev/null
@@ -1,5 +0,0 @@
-#!/bin/sh
-case "$1" in
-    1) pactl set-sink-mute @DEFAULT_SINK@ toggle ;;
-    3) pactl set-sink-volume @DEFAULT_SINK@ 50% ;;
-esac
diff --git a/config.def.h b/config.def.h
index d48e34e..be5fac7 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,5 +1,5 @@
 /* macro for conveniently specifying pathu and pathc below */
-#define PATH(name)                      "<path to the folder containing block scripts>/"name
+#define PATH(name) "/home/doda/suckless/mydwm/dwmblocks/blocks.def/"name
 
 /* buffer size for capturing output of the programs used for updating blocks */
 #define CMDOUTLENGTH                    50
@@ -13,11 +13,14 @@
    defined in colors array in dwm's config.h and so on.
  * If you wish to change DELIMITERENDCHAR, don't forget to update its value in
    dwm.c and color codes in your pathu programs. */
-#define DELIMITERENDCHAR                10
+#define DELIMITERENDCHAR           10 
 
 /* delimiter specified as an array of characters
  * (don't remove DELIMITERENDCHAR at the end) */
-static const char delimiter[] = { ' ', ' ', ' ', DELIMITERENDCHAR };
+static const char delimiter[] = { 
+    ' ',
+    DELIMITERENDCHAR
+};
 
 #include "block.h"
 
@@ -28,8 +31,7 @@ static const char delimiter[] = { ' ', ' ', ' ', DELIMITERENDCHAR };
  * Set pathc to NULL if clickability is not required for the block.
  * Set signal to 0 if both clickability and signaling are not required for the
    block.
- * Signal must be less than DELIMITERENDCHAR for clickable blocks.
- * If multiple signals are pending, then the lowest numbered one will be
+ * Signal must be less than DELIMITERENDCHAR for clickable blocks.  If multiple signals are pending, then the lowest numbered one will be
    delivered first. */
 
 /* pathu - path of the program whose output is used as status text of the block
@@ -41,11 +43,20 @@ static const char delimiter[] = { ' ', ' ', ' ', DELIMITERENDCHAR };
 #define INTERVALs                       1
 #define INTERVALn                       0
 
+// customize font
+// static char *font = "FiraCode NF:pixelsize=16:antialias=true:autohint=true";
+
 static Block blocks[] = {
 /*      pathu                           pathc                           interval        signal */
-        { PATH("calendar.sh"),          NULL,                           30,             1},
-        { PATH("volume.sh"),            PATH("volume_button.sh"),       0,              2},
-        { PATH("cpu_temp.sh"),          PATH("cpu_temp_button.sh"),     1,              4},
-        { PATH("battery.sh"),           PATH("battery_button.sh"),      30,             3},
+        { PATH("kernel_v"),             NULL,                           0,              0},
+        { PATH("pacpackages"),          PATH("pacpackages"),            360,            1},
+        { PATH("memory"),               PATH("memory"),                 10,             14},
+        { PATH("cpu"),                  PATH("cpu"),                    1,              18},
+        { PATH("cpubars"),              PATH("cpubars"),                1,              18},
+        { PATH("volume"),               PATH("volume"),                 5,              10},
+        { PATH("battery"),              PATH("battery"),                5,              3},
+        { PATH("internet"),             PATH("internet"),               5,              4},
+        { PATH("nettraf"),              PATH("nettraf"),                1,              16},
+        { PATH("clock"),                PATH("clock"),                  60,             11},
         { NULL } /* just to mark the end of the array */
 };
diff --git a/dwmblocks.c b/dwmblocks.c
index b4117fa..14c0344 100644
--- a/dwmblocks.c
+++ b/dwmblocks.c
@@ -142,6 +142,7 @@ statusloop(void)
         int i;
         struct timespec t;
 
+
         sigprocmask(SIG_BLOCK, &blocksigmask, NULL);
         for (Block *block = blocks; block->pathu; block++)
                 if (block->interval >= 0)
@@ -153,8 +154,10 @@ statusloop(void)
                 while (nanosleep(&t, &t) == -1);
                 sigprocmask(SIG_BLOCK, &blocksigmask, NULL);
                 for (Block *block = blocks; block->pathu; block++)
-                        if (block->interval > 0 && i % block->interval == 0)
-                                updateblock(block, NILL);
+                        if (block->interval > 0 && i % block->interval == 0){
+                            updateblock(block, NILL);
+                        }
+                            
         }
 }
 
diff --git a/patches/dwm-dwmblocks-6.2.diff b/patches/dwm-dwmblocks-6.2.diff
index 7ccf3be..918e652 100644
--- a/patches/dwm-dwmblocks-6.2.diff
+++ b/patches/dwm-dwmblocks-6.2.diff
@@ -1,46 +1,3 @@
-diff -ruN dwm-6.2-ori/config.def.h dwm-6.2/config.def.h
---- dwm-6.2-ori/config.def.h	2019-02-02 18:25:28.000000000 +0530
-+++ dwm-6.2/config.def.h	2020-12-27 19:45:35.127385861 +0530
-@@ -12,10 +12,26 @@
- static const char col_gray3[]       = "#bbbbbb";
- static const char col_gray4[]       = "#eeeeee";
- static const char col_cyan[]        = "#005577";
-+static const char col1[]            = "#ffffff";
-+static const char col2[]            = "#ffffff";
-+static const char col3[]            = "#ffffff";
-+static const char col4[]            = "#ffffff";
-+static const char col5[]            = "#ffffff";
-+static const char col6[]            = "#ffffff";
-+
-+enum { SchemeNorm, SchemeCol1, SchemeCol2, SchemeCol3, SchemeCol4,
-+       SchemeCol5, SchemeCol6, SchemeSel }; /* color schemes */
-+
- static const char *colors[][3]      = {
- 	/*               fg         bg         border   */
--	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
--	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
-+	[SchemeNorm]  = { col_gray3, col_gray1, col_gray2 },
-+	[SchemeCol1]  = { col1,      col_gray1, col_gray2 },
-+	[SchemeCol2]  = { col2,      col_gray1, col_gray2 },
-+	[SchemeCol3]  = { col3,      col_gray1, col_gray2 },
-+	[SchemeCol4]  = { col4,      col_gray1, col_gray2 },
-+	[SchemeCol5]  = { col5,      col_gray1, col_gray2 },
-+	[SchemeCol6]  = { col6,      col_gray1, col_gray2 },
-+	[SchemeSel]   = { col_gray4, col_cyan,  col_cyan  },
- };
- 
- /* tagging */
-@@ -103,7 +119,9 @@
- 	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
- 	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
- 	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
--	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
-+	{ ClkStatusText,        0,              Button1,        sigdwmblocks,   {.i = 1} },
-+	{ ClkStatusText,        0,              Button2,        sigdwmblocks,   {.i = 2} },
-+	{ ClkStatusText,        0,              Button3,        sigdwmblocks,   {.i = 3} },
- 	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
- 	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
- 	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
 diff -ruN dwm-6.2-ori/dwm.c dwm-6.2/dwm.c
 --- dwm-6.2-ori/dwm.c	2019-02-02 18:25:28.000000000 +0530
 +++ dwm-6.2/dwm.c	2021-08-03 19:15:58.734660076 +0530
